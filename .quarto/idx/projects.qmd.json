{"title":"projects","markdown":{"yaml":{"title":"projects"},"headingText":"Load the dataset","containsRefs":false,"markdown":"\n\nCodes\n\n```{r warning=FALSE}\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\ndataset <- read.csv(\"dataset.csv\")\n\n# Rename columns with simpler names\nnames(dataset) <- c(\"Country\", \"Total_payment\", \"Income_tax\", \"Employee_social_security_contributions\", \"Gross_wage_earnings\", \"Wages_earning_After_Taxes\", \"Tax_amount\")\n\n# Calculate Total_payment(%)\ndataset$Total_payment <- dataset$Income_tax + dataset$Employee_social_security_contributions\n\n# Create the bar graph\np <- ggplot(dataset, aes(x = reorder(Country, Total_payment), y = Total_payment, \n                         text = paste(Country, \"<br>\",\n                                    \"Total Payment (%)<br>\",\n                                      Total_payment, \"%\"))) +\n  geom_bar(stat = \"identity\", aes(fill = \"Total Payment (%)\")) +\n  geom_bar(stat = \"identity\", aes(y = Income_tax, fill = \"Income Tax (%)\",\n                                  text = paste(Country, \"<br>\",\n                                              \"Income Tax (%)<br>\",\n                                                Income_tax, \"%\"))) +\n  geom_bar(stat = \"identity\", aes(y = Employee_social_security_contributions, fill = \"Employee Social Security Contributions (%)\",\n                                  text = paste(Country, \"<br>\",\n                                              \"Employee Social Security Contributions (%)<br>\",\n                                                Employee_social_security_contributions, \"%\"))) +\n  scale_fill_manual(values = c(\"Total Payment (%)\" = \"#7B68EE\", \"Income Tax (%)\" = \"#FFA07A\", \"Employee Social Security Contributions (%)\" = \"#20B2AA\")) +\n  labs(title = \"Income Tax and Employee Social Security Contributions by Country\",\n       x = \"Country\",\n       y = \"Percentage (%)\",\n       fill = \"\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  theme(legend.position = \"top\") +\n  guides(fill = guide_legend(title = \"Type of Tax\")) \n\n# Add interactivity using plotly\np <- ggplotly(p, tooltip = \"text\")\n\n# Display the plot\np\n```\n\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n# Read the CSV file\nd <- read.csv(\"dataset.csv\", stringsAsFactors = FALSE)\n\n# Convert Tax_amount column to numeric\nd$Tax_amount <- as.numeric(gsub(\",\", \"\", d$Tax_amount))\n\n# Sort the data by Tax_amount in ascending order\nd_sorted <- d[order(d$Tax_amount), ]\n\n# Define visually pleasing colors for each country\ncountry_colors <- c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \n                    \"#bcbd22\", \"#17becf\", \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \n                    \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\", \"#393b79\", \"#ff9896\", \"#aec7e8\", \"#17becf\", \n                    \"#ffbb78\", \"#98df8a\", \"#ff7f0e\", \"#7f7f7f\", \"#c49c94\", \"#2ca02c\", \"#9467bd\", \"#8c564b\", \n                    \"#e377c2\", \"#1f77b4\", \"#d62728\", \"#7fc97f\")  \n\n# Create a ggplot object\ngg <- ggplot(d_sorted, aes(x = reorder(Country, Tax_amount), y = Tax_amount, fill = Country, \n                              text = paste( Country, \"<br>Tax Amount:\", Tax_amount))) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Tax_amount, y = Tax_amount), \n            vjust = -0.5, size = 3, position = position_nudge(y = 500), \n            color = country_colors, fontface = \"bold\") +  # Place Tax_amount on top of the bar with a gap\n  scale_fill_manual(values = country_colors) +\n  labs(title = \"Tax Amount by Country (Ascending Order)\",\n       x = \"Country\",\n       y = \"Tax Amount\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n# Convert ggplot object to plotly object\nR <- ggplotly(gg, tooltip = c(\"text\"))\n\n# Print the plot\nR\n```\n\n```{r warning=FALSE}\n# Load your dataset\nd1 <- read.csv(\"dataset.csv\")\n\n# Rename columns with simpler names\nnames(d1) <- c(\"Country\", \"Total_payment\", \"Income_tax\", \"Employee_social_security_contributions\", \"Gross_wage_earnings\", \"Wages_earning_After_Taxes\", \"Tax_amount\")\n\n# Remove commas and convert to numeric\nd1$Gross_wage_earnings <- as.numeric(gsub(\",\", \"\", d1$Gross_wage_earnings))\nd1$Wages_earning_After_Taxes <- as.numeric(gsub(\",\", \"\", d1$Wages_earning_After_Taxes))\nd1$Tax_amount <- as.numeric(gsub(\",\", \"\", d1$Tax_amount))\n\n# Assign colors to countries\ncountry_colors <- c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \n                    \"#bcbd22\", \"#17becf\", \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \n                    \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\", \"#393b79\", \"#ff9896\", \"#aec7e8\", \"#17becf\", \n                    \"#ffbb78\", \"#98df8a\", \"#ff7f0e\", \"#7f7f7f\", \"#c49c94\", \"#2ca02c\", \"#9467bd\", \"#8c564b\", \n                    \"#e377c2\", \"#1f77b4\", \"#d62728\", \"#7fc97f\")\n\n# Create a scatter plot with adjusted sizes based on Tax Amount\np <- ggplot(d1, aes(x = Gross_wage_earnings, y = Wages_earning_After_Taxes, \n                    text = paste(\"Country: \", Country, \"<br>Total Payment (%): \", Total_payment, \n                                 \"<br>Income Tax (%): \", Income_tax, \n                                 \"<br>Employee Social Security Contributions (%): \", Employee_social_security_contributions, \n                                 \"<br>Gross Wage Earnings: \", Gross_wage_earnings, \n                                 \"<br>Wages Earning After Taxes: \", Wages_earning_After_Taxes, \n                                 \"<br>Tax Amount: \", Tax_amount), \n                    size = Tax_amount, fill = Country)) +\n  geom_point(shape = 21) + # Custom point shape\n  scale_size_continuous(range = c(1, 10), guide = FALSE) + # Hide size legend\n  scale_fill_manual(values = country_colors, name = \"Country\", guide = \"legend\") + # Specify legend label for fill and hide size legend\n  labs(x = \"Gross Wage Earnings\", y = \"Wages Earning After Taxes\", title = \"Gross Wage Earnings vs. Wages Earning After Taxes\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = seq(0, 80000, by = 10000), limits = c(0, 80000)) +\n  scale_y_continuous(breaks = seq(0, 80000, by = 10000), limits = c(0, 80000)) +\n  theme(legend.position = \"right\") # Show the legend on the right side\n\n# Convert to interactive plot with plotly\npp <- ggplotly(p, tooltip = \"text\")\n\n# Display the plot\npp\n```\n\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(tidyr) # Add this line to load the tidyr package\n\n# Assuming 'dataset' is already loaded and exists in your environment\ndataset$Gross_wage_earnings <- as.numeric(gsub(\",\", \"\", gsub(\"\\\\$\", \"\", dataset$Gross_wage_earnings)))\ndataset$Wages_earning_After_Taxes <- as.numeric(gsub(\",\", \"\", gsub(\"\\\\$\", \"\", dataset$Wages_earning_After_Taxes)))\n\n# It might be necessary to ensure 'Country' is a factor for plotting\ndataset$Country <- factor(dataset$Country, levels = unique(dataset$Country))\n\n# Reshape the data for easier plotting\ndata <- dataset %>%\n  select(Country, Gross_wage_earnings, Wages_earning_After_Taxes) %>%\n  pivot_longer(cols = -Country, names_to = \"Earnings_Type\", values_to = \"Amount\")\n\n# Create the ggplot\nq <- ggplot(data, aes(x = Country, y = Amount, fill = Earnings_Type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_manual(values = c(\"Gross_wage_earnings\" = \"#69b3a2\", \"Wages_earning_After_Taxes\" = \"#404080\")) +\n  labs(title = \"Gross Wage Earnings vs. Wages Earning After Taxes by Country\",\n       x = \"Country\",\n       y = \"Amount\") +\n  theme(axis.text.x = element_text(angle = 65, vjust = 0.6))\n\n# Convert ggplot object to plotly for interactivity\np_interactive <- ggplotly(q)\n\n# Show the plot\np_interactive\n\n```\n","srcMarkdownNoYaml":"\n\nCodes\n\n```{r warning=FALSE}\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n# Load the dataset\ndataset <- read.csv(\"dataset.csv\")\n\n# Rename columns with simpler names\nnames(dataset) <- c(\"Country\", \"Total_payment\", \"Income_tax\", \"Employee_social_security_contributions\", \"Gross_wage_earnings\", \"Wages_earning_After_Taxes\", \"Tax_amount\")\n\n# Calculate Total_payment(%)\ndataset$Total_payment <- dataset$Income_tax + dataset$Employee_social_security_contributions\n\n# Create the bar graph\np <- ggplot(dataset, aes(x = reorder(Country, Total_payment), y = Total_payment, \n                         text = paste(Country, \"<br>\",\n                                    \"Total Payment (%)<br>\",\n                                      Total_payment, \"%\"))) +\n  geom_bar(stat = \"identity\", aes(fill = \"Total Payment (%)\")) +\n  geom_bar(stat = \"identity\", aes(y = Income_tax, fill = \"Income Tax (%)\",\n                                  text = paste(Country, \"<br>\",\n                                              \"Income Tax (%)<br>\",\n                                                Income_tax, \"%\"))) +\n  geom_bar(stat = \"identity\", aes(y = Employee_social_security_contributions, fill = \"Employee Social Security Contributions (%)\",\n                                  text = paste(Country, \"<br>\",\n                                              \"Employee Social Security Contributions (%)<br>\",\n                                                Employee_social_security_contributions, \"%\"))) +\n  scale_fill_manual(values = c(\"Total Payment (%)\" = \"#7B68EE\", \"Income Tax (%)\" = \"#FFA07A\", \"Employee Social Security Contributions (%)\" = \"#20B2AA\")) +\n  labs(title = \"Income Tax and Employee Social Security Contributions by Country\",\n       x = \"Country\",\n       y = \"Percentage (%)\",\n       fill = \"\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  theme(legend.position = \"top\") +\n  guides(fill = guide_legend(title = \"Type of Tax\")) \n\n# Add interactivity using plotly\np <- ggplotly(p, tooltip = \"text\")\n\n# Display the plot\np\n```\n\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n# Read the CSV file\nd <- read.csv(\"dataset.csv\", stringsAsFactors = FALSE)\n\n# Convert Tax_amount column to numeric\nd$Tax_amount <- as.numeric(gsub(\",\", \"\", d$Tax_amount))\n\n# Sort the data by Tax_amount in ascending order\nd_sorted <- d[order(d$Tax_amount), ]\n\n# Define visually pleasing colors for each country\ncountry_colors <- c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \n                    \"#bcbd22\", \"#17becf\", \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \n                    \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\", \"#393b79\", \"#ff9896\", \"#aec7e8\", \"#17becf\", \n                    \"#ffbb78\", \"#98df8a\", \"#ff7f0e\", \"#7f7f7f\", \"#c49c94\", \"#2ca02c\", \"#9467bd\", \"#8c564b\", \n                    \"#e377c2\", \"#1f77b4\", \"#d62728\", \"#7fc97f\")  \n\n# Create a ggplot object\ngg <- ggplot(d_sorted, aes(x = reorder(Country, Tax_amount), y = Tax_amount, fill = Country, \n                              text = paste( Country, \"<br>Tax Amount:\", Tax_amount))) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Tax_amount, y = Tax_amount), \n            vjust = -0.5, size = 3, position = position_nudge(y = 500), \n            color = country_colors, fontface = \"bold\") +  # Place Tax_amount on top of the bar with a gap\n  scale_fill_manual(values = country_colors) +\n  labs(title = \"Tax Amount by Country (Ascending Order)\",\n       x = \"Country\",\n       y = \"Tax Amount\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n# Convert ggplot object to plotly object\nR <- ggplotly(gg, tooltip = c(\"text\"))\n\n# Print the plot\nR\n```\n\n```{r warning=FALSE}\n# Load your dataset\nd1 <- read.csv(\"dataset.csv\")\n\n# Rename columns with simpler names\nnames(d1) <- c(\"Country\", \"Total_payment\", \"Income_tax\", \"Employee_social_security_contributions\", \"Gross_wage_earnings\", \"Wages_earning_After_Taxes\", \"Tax_amount\")\n\n# Remove commas and convert to numeric\nd1$Gross_wage_earnings <- as.numeric(gsub(\",\", \"\", d1$Gross_wage_earnings))\nd1$Wages_earning_After_Taxes <- as.numeric(gsub(\",\", \"\", d1$Wages_earning_After_Taxes))\nd1$Tax_amount <- as.numeric(gsub(\",\", \"\", d1$Tax_amount))\n\n# Assign colors to countries\ncountry_colors <- c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \n                    \"#bcbd22\", \"#17becf\", \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \n                    \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\", \"#393b79\", \"#ff9896\", \"#aec7e8\", \"#17becf\", \n                    \"#ffbb78\", \"#98df8a\", \"#ff7f0e\", \"#7f7f7f\", \"#c49c94\", \"#2ca02c\", \"#9467bd\", \"#8c564b\", \n                    \"#e377c2\", \"#1f77b4\", \"#d62728\", \"#7fc97f\")\n\n# Create a scatter plot with adjusted sizes based on Tax Amount\np <- ggplot(d1, aes(x = Gross_wage_earnings, y = Wages_earning_After_Taxes, \n                    text = paste(\"Country: \", Country, \"<br>Total Payment (%): \", Total_payment, \n                                 \"<br>Income Tax (%): \", Income_tax, \n                                 \"<br>Employee Social Security Contributions (%): \", Employee_social_security_contributions, \n                                 \"<br>Gross Wage Earnings: \", Gross_wage_earnings, \n                                 \"<br>Wages Earning After Taxes: \", Wages_earning_After_Taxes, \n                                 \"<br>Tax Amount: \", Tax_amount), \n                    size = Tax_amount, fill = Country)) +\n  geom_point(shape = 21) + # Custom point shape\n  scale_size_continuous(range = c(1, 10), guide = FALSE) + # Hide size legend\n  scale_fill_manual(values = country_colors, name = \"Country\", guide = \"legend\") + # Specify legend label for fill and hide size legend\n  labs(x = \"Gross Wage Earnings\", y = \"Wages Earning After Taxes\", title = \"Gross Wage Earnings vs. Wages Earning After Taxes\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = seq(0, 80000, by = 10000), limits = c(0, 80000)) +\n  scale_y_continuous(breaks = seq(0, 80000, by = 10000), limits = c(0, 80000)) +\n  theme(legend.position = \"right\") # Show the legend on the right side\n\n# Convert to interactive plot with plotly\npp <- ggplotly(p, tooltip = \"text\")\n\n# Display the plot\npp\n```\n\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(tidyr) # Add this line to load the tidyr package\n\n# Assuming 'dataset' is already loaded and exists in your environment\ndataset$Gross_wage_earnings <- as.numeric(gsub(\",\", \"\", gsub(\"\\\\$\", \"\", dataset$Gross_wage_earnings)))\ndataset$Wages_earning_After_Taxes <- as.numeric(gsub(\",\", \"\", gsub(\"\\\\$\", \"\", dataset$Wages_earning_After_Taxes)))\n\n# It might be necessary to ensure 'Country' is a factor for plotting\ndataset$Country <- factor(dataset$Country, levels = unique(dataset$Country))\n\n# Reshape the data for easier plotting\ndata <- dataset %>%\n  select(Country, Gross_wage_earnings, Wages_earning_After_Taxes) %>%\n  pivot_longer(cols = -Country, names_to = \"Earnings_Type\", values_to = \"Amount\")\n\n# Create the ggplot\nq <- ggplot(data, aes(x = Country, y = Amount, fill = Earnings_Type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_manual(values = c(\"Gross_wage_earnings\" = \"#69b3a2\", \"Wages_earning_After_Taxes\" = \"#404080\")) +\n  labs(title = \"Gross Wage Earnings vs. Wages Earning After Taxes by Country\",\n       x = \"Country\",\n       y = \"Amount\") +\n  theme(axis.text.x = element_text(angle = 65, vjust = 0.6))\n\n# Convert ggplot object to plotly for interactivity\np_interactive <- ggplotly(q)\n\n# Show the plot\np_interactive\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"projects.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":"cosmo","title":"projects"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}