[
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "projects",
    "section": "",
    "text": "Codes\n\nlibrary(ggplot2)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Load the dataset\ndataset &lt;- read.csv(\"dataset.csv\")\n\n# Rename columns with simpler names\nnames(dataset) &lt;- c(\"Country\", \"Total_payment\", \"Income_tax\", \"Employee_social_security_contributions\", \"Gross_wage_earnings\", \"Wages_earning_After_Taxes\", \"Tax_amount\")\n\n# Calculate Total_payment(%)\ndataset$Total_payment &lt;- dataset$Income_tax + dataset$Employee_social_security_contributions\n\n# Create the bar graph\np &lt;- ggplot(dataset, aes(x = reorder(Country, Total_payment), y = Total_payment, \n                         text = paste(Country, \"&lt;br&gt;\",\n                                    \"Total Payment (%)&lt;br&gt;\",\n                                      Total_payment, \"%\"))) +\n  geom_bar(stat = \"identity\", aes(fill = \"Total Payment (%)\")) +\n  geom_bar(stat = \"identity\", aes(y = Income_tax, fill = \"Income Tax (%)\",\n                                  text = paste(Country, \"&lt;br&gt;\",\n                                              \"Income Tax (%)&lt;br&gt;\",\n                                                Income_tax, \"%\"))) +\n  geom_bar(stat = \"identity\", aes(y = Employee_social_security_contributions, fill = \"Employee Social Security Contributions (%)\",\n                                  text = paste(Country, \"&lt;br&gt;\",\n                                              \"Employee Social Security Contributions (%)&lt;br&gt;\",\n                                                Employee_social_security_contributions, \"%\"))) +\n  scale_fill_manual(values = c(\"Total Payment (%)\" = \"#7B68EE\", \"Income Tax (%)\" = \"#FFA07A\", \"Employee Social Security Contributions (%)\" = \"#20B2AA\")) +\n  labs(title = \"Income Tax and Employee Social Security Contributions by Country\",\n       x = \"Country\",\n       y = \"Percentage (%)\",\n       fill = \"\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  theme(legend.position = \"top\") +\n  guides(fill = guide_legend(title = \"Type of Tax\")) \n\n# Add interactivity using plotly\np &lt;- ggplotly(p, tooltip = \"text\")\n\n# Display the plot\np\n\n\n\n\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n# Read the CSV file\nd &lt;- read.csv(\"dataset.csv\", stringsAsFactors = FALSE)\n\n# Convert Tax_amount column to numeric\nd$Tax_amount &lt;- as.numeric(gsub(\",\", \"\", d$Tax_amount))\n\n# Sort the data by Tax_amount in ascending order\nd_sorted &lt;- d[order(d$Tax_amount), ]\n\n# Define visually pleasing colors for each country\ncountry_colors &lt;- c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \n                    \"#bcbd22\", \"#17becf\", \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \n                    \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\", \"#393b79\", \"#ff9896\", \"#aec7e8\", \"#17becf\", \n                    \"#ffbb78\", \"#98df8a\", \"#ff7f0e\", \"#7f7f7f\", \"#c49c94\", \"#2ca02c\", \"#9467bd\", \"#8c564b\", \n                    \"#e377c2\", \"#1f77b4\", \"#d62728\", \"#7fc97f\")  \n\n# Create a ggplot object\ngg &lt;- ggplot(d_sorted, aes(x = reorder(Country, Tax_amount), y = Tax_amount, fill = Country, \n                              text = paste( Country, \"&lt;br&gt;Tax Amount:\", Tax_amount))) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = Tax_amount, y = Tax_amount), \n            vjust = -0.5, size = 3, position = position_nudge(y = 500), \n            color = country_colors, fontface = \"bold\") +  # Place Tax_amount on top of the bar with a gap\n  scale_fill_manual(values = country_colors) +\n  labs(title = \"Tax Amount by Country (Ascending Order)\",\n       x = \"Country\",\n       y = \"Tax Amount\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n# Convert ggplot object to plotly object\nR &lt;- ggplotly(gg, tooltip = c(\"text\"))\n\n# Print the plot\nR\n\n\n\n\n\n\n# Load your dataset\nd1 &lt;- read.csv(\"dataset.csv\")\n\n# Rename columns with simpler names\nnames(d1) &lt;- c(\"Country\", \"Total_payment\", \"Income_tax\", \"Employee_social_security_contributions\", \"Gross_wage_earnings\", \"Wages_earning_After_Taxes\", \"Tax_amount\")\n\n# Remove commas and convert to numeric\nd1$Gross_wage_earnings &lt;- as.numeric(gsub(\",\", \"\", d1$Gross_wage_earnings))\nd1$Wages_earning_After_Taxes &lt;- as.numeric(gsub(\",\", \"\", d1$Wages_earning_After_Taxes))\nd1$Tax_amount &lt;- as.numeric(gsub(\",\", \"\", d1$Tax_amount))\n\n# Assign colors to countries\ncountry_colors &lt;- c(\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \n                    \"#bcbd22\", \"#17becf\", \"#aec7e8\", \"#ffbb78\", \"#98df8a\", \"#ff9896\", \"#c5b0d5\", \"#c49c94\", \n                    \"#f7b6d2\", \"#c7c7c7\", \"#dbdb8d\", \"#9edae5\", \"#393b79\", \"#ff9896\", \"#aec7e8\", \"#17becf\", \n                    \"#ffbb78\", \"#98df8a\", \"#ff7f0e\", \"#7f7f7f\", \"#c49c94\", \"#2ca02c\", \"#9467bd\", \"#8c564b\", \n                    \"#e377c2\", \"#1f77b4\", \"#d62728\", \"#7fc97f\")\n\n# Create a scatter plot with adjusted sizes based on Tax Amount\np &lt;- ggplot(d1, aes(x = Gross_wage_earnings, y = Wages_earning_After_Taxes, \n                    text = paste(\"Country: \", Country, \"&lt;br&gt;Total Payment (%): \", Total_payment, \n                                 \"&lt;br&gt;Income Tax (%): \", Income_tax, \n                                 \"&lt;br&gt;Employee Social Security Contributions (%): \", Employee_social_security_contributions, \n                                 \"&lt;br&gt;Gross Wage Earnings: \", Gross_wage_earnings, \n                                 \"&lt;br&gt;Wages Earning After Taxes: \", Wages_earning_After_Taxes, \n                                 \"&lt;br&gt;Tax Amount: \", Tax_amount), \n                    size = Tax_amount, fill = Country)) +\n  geom_point(shape = 21) + # Custom point shape\n  scale_size_continuous(range = c(1, 10), guide = FALSE) + # Hide size legend\n  scale_fill_manual(values = country_colors, name = \"Country\", guide = \"legend\") + # Specify legend label for fill and hide size legend\n  labs(x = \"Gross Wage Earnings\", y = \"Wages Earning After Taxes\", title = \"Gross Wage Earnings vs. Wages Earning After Taxes\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = seq(0, 80000, by = 10000), limits = c(0, 80000)) +\n  scale_y_continuous(breaks = seq(0, 80000, by = 10000), limits = c(0, 80000)) +\n  theme(legend.position = \"right\") # Show the legend on the right side\n\n# Convert to interactive plot with plotly\npp &lt;- ggplotly(p, tooltip = \"text\")\n\n# Display the plot\npp\n\n\n\n\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(tidyr) # Add this line to load the tidyr package\n\n# Assuming 'dataset' is already loaded and exists in your environment\ndataset$Gross_wage_earnings &lt;- as.numeric(gsub(\",\", \"\", gsub(\"\\\\$\", \"\", dataset$Gross_wage_earnings)))\ndataset$Wages_earning_After_Taxes &lt;- as.numeric(gsub(\",\", \"\", gsub(\"\\\\$\", \"\", dataset$Wages_earning_After_Taxes)))\n\n# It might be necessary to ensure 'Country' is a factor for plotting\ndataset$Country &lt;- factor(dataset$Country, levels = unique(dataset$Country))\n\n# Reshape the data for easier plotting\ndata &lt;- dataset %&gt;%\n  select(Country, Gross_wage_earnings, Wages_earning_After_Taxes) %&gt;%\n  pivot_longer(cols = -Country, names_to = \"Earnings_Type\", values_to = \"Amount\")\n\n# Create the ggplot\nq &lt;- ggplot(data, aes(x = Country, y = Amount, fill = Earnings_Type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_manual(values = c(\"Gross_wage_earnings\" = \"#69b3a2\", \"Wages_earning_After_Taxes\" = \"#404080\")) +\n  labs(title = \"Gross Wage Earnings vs. Wages Earning After Taxes by Country\",\n       x = \"Country\",\n       y = \"Amount\") +\n  theme(axis.text.x = element_text(angle = 65, vjust = 0.6))\n\n# Convert ggplot object to plotly for interactivity\np_interactive &lt;- ggplotly(q)\n\n# Show the plot\np_interactive"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "PPT",
    "section": "",
    "text": "PPT link: https://docs.google.com/presentation/d/1QAPtIZ7uXbulJLVgRModpYHIqqH9HZTH/edit?usp=drive_link&ouid=100734816175066468454&rtpof=true&sd=true\n\nDataset link:\nhttps://drive.google.com/file/d/1shEtwzBH4oxuSdyWgoyfd08_DTw20Osw/view?usp=drive_link\n\nSource:\nhttps://howmuch.net/sources/money-people-take-home-after-taxes\nVideo:\nhttps://youtu.be/TJ8NaYJYSzU?feature=shared"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Pranav Tej Reddy Annareddy",
    "section": "",
    "text": "About Me\n\nHello! My name is Pranav Tej Reddy Annareddy. I am a dedicated and driven individual with a passion for technology and a strong desire to make a positive impact through my work. Currently, I am pursuing my Masterâ€™s program in Data Analytics Engineering at George Mason University, which perfectly aligns with my interests and previous experiences. I am eagerly looking forward to delving deeper into the field of data analytics and undertaking substantial projects that will contribute to my technical growth and career advancement.\n\n\n\nEducation\n\nI completed my Bachelor of Technology in Computer Science and Engineering from Vardhaman College of Engineering in Hyderabad, Telangana, graduating with a commendable GPA of 7.67. Prior to that, I pursued my Intermediate education at Pine Grove Junior College and completed my high school studies at Sri Chaitanya School, both in Hyderabad, Telangana. These educational experiences have equipped me with a strong foundation in computer science and have nurtured my analytical and problem-solving skills.\n\n\n\nExperience\n\nDuring my academic journey, I had the opportunity to gain practical experience through internships. At Salesforce in Hyderabad, I served as a Software Developer Intern, where I completed Salesforce Trailhead modules, undertook software development assignments, and gained valuable insights into the Salesforce platform. Additionally, I interned as a Data Science Engineer at Intrainz, where I developed a machine learning model tailored to the companyâ€™s needs, honed my teamwork and communication skills, and created data-driven presentations.\n\n\n\nProjects\n\nI have worked on several impactful projects that demonstrate my proficiency in various domains of technology. One notable project is the development of an application for Alzheimerâ€™s disease detection using Convolutional Neural Networks (CNN), which involved analyzing MRI images to predict the disease. Another significant project is the creation of a customized algorithm for optimizing traffic flow in urban areas, named Customized Gridlock Curb. Furthermore, I developed Career Upgrade, a web application aimed at assisting undergraduate students in finding internships, jobs, and courses to enhance their technical skills.\n\n\n\nProgramming Skills\n\nMy expertise extends across multiple programming languages, including Python, JavaScript, and SQL. I am proficient in utilizing technologies such as Machine Learning, PowerBI, and Google Cloud Platform (GCP) to develop innovative solutions to complex problems.\n\n\n\nAchievements\n\nI take pride in my achievements both academically and in extracurricular activities. I was a part of the runner-up cricket team in an interschool competition and was awarded the best batsman medal in an intercollege competition, showcasing my dedication and sportsmanship.\n\n\n\nCertifications\n\nTo further augment my skills and knowledge, I have pursued certifications in Applied Machine Learning in Python, Neural Networks and Deep Learning, Mathematics for Data Science and Machine Learning, and Data Science in Python.\n\n\n\nInterests\n\nOutside of academics and work, I have a variety of interests that keep me engaged and balanced. I enjoy traveling to explore new places, playing cricket to stay active, watching movies for entertainment, and delving into finance to broaden my understanding of the economic landscape.\n\nI am a motivated and enthusiastic individual with a strong academic background, diverse experiences, and a keen interest in data analytics. I am excited about the opportunities that lie ahead in my Masterâ€™s program at George Mason University and am eager to make meaningful contributions to the field of data analytics engineering."
  }
]